.. mkname documentation master file, created by
   sphinx-quickstart on Sat Aug 19 07:52:14 2023.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to mkname's documentation!
==================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:
   
   self
   /api.rst
   /requirements.rst


.. _intro:

Introduction to :mod:`mkname`
=============================
The :mod:`mkname` package is a Python package for building names by
using other names as building blocks.


Why?
====
It started with an update to a blackjack game I wrote as my first
project in Python. I wanted to have a bunch of computer players
playing with you, and thought they should be randomly generated
with randomly generated names. Then it came up in a few other things
I wrote, so I figured I'd turn it into a package.


What does it do?
================
It pulls random names from a database, and can modify those names
before returning them. Major features include:

*   Use parts of multiple names to construct a new name.
*   Modify the selected or constructed names.
*   Use a default database of names.
*   Use your own database of names.
*   Import into your Python code as a package.
*   Use from the command line.


How do I run it?
================
The easiest way to install and run `mkname` is:

1.  Ensure you are using Python 3.10 or higher.
2.  Install from PyPI using pip: `pip install mkname`
3.  Run the following command to see the options: `mkname -h`

It should also be able to be imported into your Python code as a package.


What is the Cultural Bias of :mod:`mkname`?
===========================================
Names are culturally specific things. What looks like a plausible or
implausible name is going to depend on the cultural context of the
reader. Certain combinations of letters generated by :mod:`mkname` may
hold special significance in some cultures, making their generation
in certain contexts a sensitive thing. Even this package's focus on
the Latin alphabet and how if breaks words into syllables limit its
usefulness for languages who don't use the Latin alphabet or don't
use those letters in the same way they are used in American English.

This package is the work of one middle-aged, English-speaking male of
German and English decent who grew up on a small farm in the Midwestern
United States. It was written to keep the names of computer characters
in a blackjack game from being too boring. The data sources I used and
other choices I made in the creation of this package are going to be
biased by my cultural context.

All that is to say that the output of :mod:`mkname` may not be useful
to you in its current state. Given the pseudorandom nature of the
name generation, it's possible the raw output might even be worse
than useless in certain circumstances. If there are features that can
be added to make it more useful for your language and your culture,
please feel free to let me know. I'm not getting paid for this, so I
can't promise when I'll have time to make any changes. But, I would
like to make this more useful to more people.


How do I run the tests?
=======================
I'm using the `pytest` library for the unit tests. To just run those tests,
go to the root of your clone of the `mkname` repository and use the following
command::

    python3 -m pytest

The full suite of style checks, mypy, and such I use can be run using a
shortcut I have set up in the Makefile::

    make pre

Note: `precommit.py` requires itself to be run from a virtual environment
located in the `.venv` directory at the root of the repository. This is so
I don't accidentally run it using my system's Python and then waste hours
troubleshooting that mess. If you want to disable this, you'll have to
modify the script. The easiest way is probably commenting out the
`check_venv()` call in `main()`.


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
